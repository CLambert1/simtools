% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_trajectory_cpf.R
\name{simulate_trajectory_CPF}
\alias{simulate_trajectory_CPF}
\title{Simulate individual trajectory}
\usage{
simulate_trajectory_CPF(
  initial_position,
  resource_layer,
  starting_hour,
  starting_bearing = c(90, 10),
  starting_step = c(4.5, 3),
  travel_bearing = c(0, 20),
  travel_step = c(3, 3),
  foraging_bearing = c(0, 0.5),
  foraging_step = c(1, 3),
  minx = 0,
  maxx = 90,
  miny = 0,
  maxy = 90,
  max_dist = 40,
  step_duration = 1,
  activity_threshold = 0.5,
  max_duration = 720
)
}
\arguments{
\item{initial_position}{data.frame containing the coordinates of the point the individual starts from (Lon, Lat fields), considered to be the colony location}

\item{resource_layer}{SpatRaster of the resource layer}

\item{starting_hour}{Starting hour}

\item{starting_bearing}{Bearing when departing the colony (mu, kappa)}

\item{starting_step}{Step length when departing the colony (mu, kappa)}

\item{travel_bearing}{Bearing from previous step when traveling (mu, kappa)}

\item{travel_step}{Distance from previous step when traveling (scale, rate)}

\item{foraging_bearing}{Bearing from previous step when foraging/searching (mu, kappa)}

\item{foraging_step}{Distance from previous step when foraging (scale, rate)}

\item{minx}{Minimum longitude of the bounding box to simulate trajectory within}

\item{maxx}{Maximum longitude of the bounding box to simulate trajectory within}

\item{miny}{Minimum latitude of the bounding box to simulate trajectory within}

\item{maxy}{Maximum latitude of the bounding box to simulate trajectory within}

\item{max_dist}{Distance threshold value above which the individual starts its homing bout}

\item{step_duration}{Duration of a step length, in minutes (defaults 1), defines the sampling interval}

\item{activity_threshold}{Threshold environmental value defining when an individual switches from travelling to foraging movement}

\item{max_duration}{Total duration of a full trip, in minutes (defaults to 720, 12h)}
}
\value{
a data.frame
}
\description{
Simulate individual trajectory
}
\examples{
library(ggplot2)
library(viridis)
library(tidyterra)
library(lubridate)
library(terra)
colony_location <- data.frame(Lon = 20, Lat = 20)
cdt <- generate_env_layer(grid = create_grid(), n = 1, seed = 25)
daylength <- insol::daylength(long = colony_location$Lon, 
                              lat = colony_location$Lat, 
                              jd = insol::JD(as.POSIXct("2022-08-01", tz = "UTC")), tmz = 0)
sunrise <- format(as.POSIXct(daylength[,1]*3600, 
                             origin = as.POSIXct("2022-08-01", tz = "UTC"), "\%H:\%M", tz = "UTC"))
    
# launch a travel for a duration of 12h
single_traj <- simulate_trajectory_CPF(initial_position = colony_location, 
                    resource_layer = cdt$rasters, 
                    starting_hour = ymd_hms(sunrise), # departs at sunrise
                    starting_bearing = c(90,10), 
                    starting_step = c(4.5, 3),
                    travel_bearing = c(0, 20), 
                    travel_step = c(3, 3), 
                    foraging_bearing = c(0, 0.5), 
                    foraging_step = c(1, 3),
                    minx = 0, maxx = 90, 
                    miny = 0, maxy = 90,
                    max_dist = 40,
                    step_duration = 5,
                    activity_threshold = 0.70,
                    max_duration = 720)

# view the trajectory
ggplot(single.traj) +
  geom_spatraster(data = cdt$rasters) + 
  geom_point(aes(x = Lon, y = Lat, color = activity)) +
  geom_point(data = colony_location, aes(x = Lon, y = Lat), col = "red") +
  scale_fill_viridis(option = "H") 

# look at the density distribution of distance to colony and movement parameters
ggplot(single_traj) + geom_density(aes(x = dist_col))
ggplot(single_traj |> subset(activity \%in\% c("forage", "travel"))) + geom_density(aes(x = angle)) + facet_wrap("activity")
ggplot(single_traj |> subset(activity \%in\% c("forage", "travel"))) + geom_density(aes(x = step)) + facet_wrap("activity")

}
